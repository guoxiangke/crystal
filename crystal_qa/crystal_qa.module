<?php
/**
 * @file
 * This is the main module of the Q&A project.
 * Almost all the project common requirements which need code are placed in this module.
 * The requirements are:
 * 	1.Redirect the node page(question & answer ) to the view page(integrate one question and anwsers one page) .eg: 'node/1' => 'questions/[nid]'.
 * 	2.Add a new reference field value to the question when a new answer was created for it. 
 * 	.....
 * dependencies: 
 * 	views
 * 	entityreference
 * 	rules
 * incs:
 * 	crystal_qa.rules.inc
 * hooks:
 * 	hook_init() ［Implementation the No 1 requirements above.］
 * 	hook_rules_condition_info()  ［Implementation the No 2 requirements above.］
 */

/**
 * Implementation of hook_init().
 * Redirect the node page(question & answer ) to the view page(integrate a question and anwsers one page) .
 * eg:'node/1' => 'questions/[nid]'.
 */
function crystal_qa_init() {
  if (arg(0) == 'node' && is_numeric(arg(1)) && arg(2) == '') {
      $node = node_load(arg(1));
      if ($node) {
        if ($node->type == 'answer') {
         //drupal_goto('question/'. $node->field_answer['und'][0]['target_id']);
        }
        elseif ($node->type == 'question') {
          //drupal_goto('question/'. $node->nid);
        }
    }
  }
}
/**
 * Allow modules to allow or deny access to flagging.
 *
 * @param $flag
 *  The flag object.
 * @param $content_id
 *  The id of the entity in question.
 * @param $action
 *  The action to test. Either 'flag' or 'unflag'.
 * @param $account
 *  The user on whose behalf to test the flagging action.
 *
 * @return
 *   Boolean TRUE if the user is allowed to flag/unflag the given content.
 *   FALSE otherwise.
 *
 * @see flag_flag:access()
 * 
 * Implementation of hook_flag_access().
 * 
 * The requirement like this:
 * We use a flag named Accept to flag the best answer for a question, 
 * and give all the students permission to use this flag,
 * means to all answers( attention those belongs the another question and the question's author isn't the student) 
 * which seems not logical..
 */
function crystal_qa_flag_access($flag, $content_id, $action, $account) {
	if (($flag->name == 'accepted') && ($flag->content_type == 'node')  && ($node = node_load($content_id))) {
		if($node->type=='answer') { // the Answer node type machine name must be answer
			$question_nid = $node->field_answer['und']['0']['target_id'];
			$question = node_load($question_nid);
			return $question->uid==$account->uid ? TRUE : FALSE;
		}
	}
}